{
  "contractName": "generateNumber",
  "abi": [
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "queryId",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "getRandomNumber",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"queryId\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"getRandomNumber\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/Lenovo/projects/oraclize/randomness/contracts/generateRandomNumber.sol\":\"generateNumber\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/Lenovo/projects/oraclize/randomness/contracts/generateRandomNumber.sol\":{\"keccak256\":\"0x8fed78ab990f44cb675f7173f2ad64e7bafdebc7e3a6d972704ff5df788df04e\",\"urls\":[\"bzz-raw://132a92beb6e614e418f47f60515159df10d78453b6b8b41e6186a57f444fc385\",\"dweb:/ipfs/QmSxmV7sBv45dY4z76AwUK8cij9BsYJpx27k1retVuLGLR\"]},\"ethereum-api/oraclizeAPI_0.5.sol\":{\"keccak256\":\"0x27113af83c8ff3d07a56605489e24bbb162bcc5dd6d3baa138750b03a7089fef\",\"urls\":[\"bzz-raw://8823efac6122f9ba161172a64663324cadcb058885f5694b3bfd54783b36acc7\",\"dweb:/ipfs/QmPBk9vNtWTpNr9eARKiPgxrKB4Z2FJK57YjjtRLHGAU2L\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f600160f81b604060f81b176200002560201b60201c565b62000a46565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480620000b557506000620000b3600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166200038860201b60201c565b145b15620000cf57620000cd60006200039360201b60201c565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200013a57600080fd5b505af11580156200014f573d6000803e3d6000fd5b505050506040513d60208110156200016657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614620002b357600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156200023657600080fd5b505af11580156200024b573d6000803e3d6000fd5b505050506040513d60208110156200026257600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663688dcfd7826040518263ffffffff1660e01b815260040180827effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050600060405180830381600087803b1580156200036c57600080fd5b505af115801562000381573d6000803e3d6000fd5b5050505050565b6000813b9050919050565b6000620003a5620003ac60201b60201c565b9050919050565b600080620003d4731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed6200038860201b60201c565b11156200048057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620004766040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506200097b60201b60201c565b6001905062000978565b6000620004a773c03a2615d5efaf5f49f60b7bb6583eaec212fdf16200038860201b60201c565b1115620005535773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620005496040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506200097b60201b60201c565b6001905062000978565b60006200057a73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e6200038860201b60201c565b1115620006265773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200061c6040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506200097b60201b60201c565b6001905062000978565b60006200064d73146500cfd35b22e4a392fe0adc06de1a1368ed486200038860201b60201c565b1115620006f95773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620006ef6040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506200097b60201b60201c565b6001905062000978565b60006200072073a2998efd205fb9d4b4963afb70778d6354ad3a416200038860201b60201c565b1115620007cc5773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550620007c26040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506200097b60201b60201c565b6001905062000978565b6000620007f3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb4756200038860201b60201c565b11156200085957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000978565b6000620008807320e12a1f859b3feae5fb2a0a32c18f5a65555bbf6200038860201b60201c565b1115620008e6577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000978565b60006200090d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa6200038860201b60201c565b111562000973577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001905062000978565b600090505b90565b80600290805190602001906200099392919062000997565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620009da57805160ff191683800117855562000a0b565b8280016001018555821562000a0b579182015b8281111562000a0a578251825591602001919060010190620009ed565b5b50905062000a1a919062000a1e565b5090565b62000a4391905b8082111562000a3f57600081600090555060010162000a25565b5090565b90565b6113b88062000a566000396000f3fe60806040526004361061003f5760003560e01c806327dc297e1461004457806338bbfa5014610116578063ccbac9f51461027f578063dbdff2c1146102aa575b600080fd5b34801561005057600080fd5b506101146004803603604081101561006757600080fd5b81019080803590602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102b4565b005b34801561012257600080fd5b5061027d6004803603606081101561013957600080fd5b81019080803590602001909291908035906020019064010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f757600080fd5b82018360208201111561020957600080fd5b8035906020019184600183028401116401000000008311171561022b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f7565b005b34801561028b57600080fd5b5061029461034a565b6040518082815260200191505060405180910390f35b6102b2610350565b005b6102f3828260006040519080825280601f01601f1916602001820160405280156102ed5781602001600182028038833980820191505090505b506102f7565b5050565b6102ff6103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b61033f826106e4565b600581905550505050565b60055481565b6103c46040518060400160405280600481526020017f436f6d70000000000000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f49504653204861736800000000000000000000000000000000000000000000008152506106f8565b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061044f5750600061044d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c3e565b145b156104605761045e6000610c49565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b505050506040513d60208110156104f457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d60208110156105ec57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a457600080fd5b505afa1580156106b8573d6000803e3d6000fd5b505050506040513d60208110156106ce57600080fd5b8101908080519060200190929190505050905090565b60006106f1826000610c5a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107805750600061077e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c3e565b145b156107915761078f6000610c49565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050506040513d602081101561082557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461096e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b505050506040513d602081101561091d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109fd5780820151818401526020810190506109e2565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b505050506040513d6020811015610a7357600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610aa9576000801b915050610c38565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610b44578082015181840152602081019050610b29565b50505050905090810190601f168015610b715780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610baa578082015181840152602081019050610b8f565b50505050905090810190601f168015610bd75780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b50505050506040513d6020811015610c2357600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610c53610d6d565b9050919050565b600060608390506000809050600080905060008090505b8351811015610d4e576030848281518110610c8857fe5b602001015160f81c60f81b60f81c60ff1610158015610cc457506039848281518110610cb057fe5b602001015160f81c60f81b60f81c60ff1611155b15610d16578115610ce7576000861415610cdd57610d4e565b8580600190039650505b600a830292506030848281518110610cfb57fe5b602001015160f81c60f81b60f81c60ff160383019250610d41565b602e848281518110610d2457fe5b602001015160f81c60f81b60f81c60ff161415610d4057600191505b5b8080600101915050610c71565b506000851115610d615784600a0a820291505b81935050505092915050565b600080610d8d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c3e565b1115610e2f57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e266040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610e4e73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c3e565b1115610ef05773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ee76040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610f0f73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c3e565b1115610fb15773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fa86040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610fd073146500cfd35b22e4a392fe0adc06de1a1368ed48610c3e565b11156110725773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110696040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506112c4565b600190506112c1565b600061109173a2998efd205fb9d4b4963afb70778d6354ad3a41610c3e565b11156111335773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061112a6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000611152736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c3e565b11156111b657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b60006111d57320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c3e565b1115611239577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b60006112587351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c3e565b11156112bc577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b600090505b90565b80600290805190602001906112da9291906112de565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061131f57805160ff191683800117855561134d565b8280016001018555821561134d579182015b8281111561134c578251825591602001919060010190611331565b5b50905061135a919061135e565b5090565b61138091905b8082111561137c576000816000905550600101611364565b5090565b9056fea265627a7a7231582077d3c91879954b32e8ae2507b2a860d8ff38cd2db0f495a6e0565ff52d5c378c64736f6c63430005100032",
  "deployedBytecode": "0x60806040526004361061003f5760003560e01c806327dc297e1461004457806338bbfa5014610116578063ccbac9f51461027f578063dbdff2c1146102aa575b600080fd5b34801561005057600080fd5b506101146004803603604081101561006757600080fd5b81019080803590602001909291908035906020019064010000000081111561008e57600080fd5b8201836020820111156100a057600080fd5b803590602001918460018302840111640100000000831117156100c257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102b4565b005b34801561012257600080fd5b5061027d6004803603606081101561013957600080fd5b81019080803590602001909291908035906020019064010000000081111561016057600080fd5b82018360208201111561017257600080fd5b8035906020019184600183028401116401000000008311171561019457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156101f757600080fd5b82018360208201111561020957600080fd5b8035906020019184600183028401116401000000008311171561022b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102f7565b005b34801561028b57600080fd5b5061029461034a565b6040518082815260200191505060405180910390f35b6102b2610350565b005b6102f3828260006040519080825280601f01601f1916602001820160405280156102ed5781602001600182028038833980820191505090505b506102f7565b5050565b6102ff6103c7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033657600080fd5b61033f826106e4565b600581905550505050565b60055481565b6103c46040518060400160405280600481526020017f436f6d70000000000000000000000000000000000000000000000000000000008152506040518060400160405280600981526020017f49504653204861736800000000000000000000000000000000000000000000008152506106f8565b50565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061044f5750600061044d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c3e565b145b156104605761045e6000610c49565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156104ca57600080fd5b505af11580156104de573d6000803e3d6000fd5b505050506040513d60208110156104f457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461063d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156105c257600080fd5b505af11580156105d6573d6000803e3d6000fd5b505050506040513d60208110156105ec57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106a457600080fd5b505afa1580156106b8573d6000803e3d6000fd5b505050506040513d60208110156106ce57600080fd5b8101908080519060200190929190505050905090565b60006106f1826000610c5a565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806107805750600061077e600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c3e565b145b156107915761078f6000610c49565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156107fb57600080fd5b505af115801561080f573d6000803e3d6000fd5b505050506040513d602081101561082557600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461096e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b1580156108f357600080fd5b505af1158015610907573d6000803e3d6000fd5b505050506040513d602081101561091d57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156109fd5780820151818401526020810190506109e2565b50505050905090810190601f168015610a2a5780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610a4957600080fd5b505af1158015610a5d573d6000803e3d6000fd5b505050506040513d6020811015610a7357600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610aa9576000801b915050610c38565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610b44578082015181840152602081019050610b29565b50505050905090810190601f168015610b715780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610baa578082015181840152602081019050610b8f565b50505050905090810190601f168015610bd75780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610bf857600080fd5b505af1158015610c0c573d6000803e3d6000fd5b50505050506040513d6020811015610c2357600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610c53610d6d565b9050919050565b600060608390506000809050600080905060008090505b8351811015610d4e576030848281518110610c8857fe5b602001015160f81c60f81b60f81c60ff1610158015610cc457506039848281518110610cb057fe5b602001015160f81c60f81b60f81c60ff1611155b15610d16578115610ce7576000861415610cdd57610d4e565b8580600190039650505b600a830292506030848281518110610cfb57fe5b602001015160f81c60f81b60f81c60ff160383019250610d41565b602e848281518110610d2457fe5b602001015160f81c60f81b60f81c60ff161415610d4057600191505b5b8080600101915050610c71565b506000851115610d615784600a0a820291505b81935050505092915050565b600080610d8d731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c3e565b1115610e2f57731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e266040518060400160405280600b81526020017f6574685f6d61696e6e65740000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610e4e73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c3e565b1115610ef05773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610ee76040518060400160405280600c81526020017f6574685f726f707374656e3300000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610f0f73b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c3e565b1115610fb15773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fa86040518060400160405280600981526020017f6574685f6b6f76616e00000000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000610fd073146500cfd35b22e4a392fe0adc06de1a1368ed48610c3e565b11156110725773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506110696040518060400160405280600b81526020017f6574685f72696e6b6562790000000000000000000000000000000000000000008152506112c4565b600190506112c1565b600061109173a2998efd205fb9d4b4963afb70778d6354ad3a41610c3e565b11156111335773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061112a6040518060400160405280600a81526020017f6574685f676f65726c69000000000000000000000000000000000000000000008152506112c4565b600190506112c1565b6000611152736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c3e565b11156111b657736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b60006111d57320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c3e565b1115611239577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b60006112587351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c3e565b11156112bc577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600190506112c1565b600090505b90565b80600290805190602001906112da9291906112de565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061131f57805160ff191683800117855561134d565b8280016001018555821561134d579182015b8281111561134c578251825591602001919060010190611331565b5b50905061135a919061135e565b5090565b61138091905b8082111561137c576000816000905550600101611364565b5090565b9056fea265627a7a7231582077d3c91879954b32e8ae2507b2a860d8ff38cd2db0f495a6e0565ff52d5c378c64736f6c63430005100032",
  "sourceMap": "82:487:1:-;;;201:56;11303:4:2;239:17:1;;11347:4:2;219:17:1;;:37;201:17;;;:56;;:::i;:::-;82:487;;37047:116:2;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;;;:25;;:::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;;;:35;;:::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:2;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:2;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;37126:8;;;;;;;;;;;:21;;;37148:7;37126:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37126:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37126:30:2;;;;37047:116;:::o;37306:147::-;37365:10;37431:5;37419:18;37410:27;;37396:51;;;:::o;12546:205::-;12611:16;12723:21;:19;;;:21;;:::i;:::-;12716:28;;12546:205;;;:::o;13025:2047::-;13074:16;13164:1;13106:55;13118:42;13106:11;;;:55;;:::i;:::-;:59;13102:248;;;13219:42;13191:3;;:71;;;;;;;;;;;;;;;;;;13276:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;13335:4;13328:11;;;;13102:248;13421:1;13363:55;13375:42;13363:11;;;:55;;:::i;:::-;:59;13359:257;;;13484:42;13456:3;;:71;;;;;;;;;;;;;;;;;;13541:39;;;;;;;;;;;;;;;;;;:23;;;:39;;:::i;:::-;13601:4;13594:11;;;;13359:257;13687:1;13629:55;13641:42;13629:11;;;:55;;:::i;:::-;:59;13625:252;;;13748:42;13720:3;;:71;;;;;;;;;;;;;;;;;;13805:36;;;;;;;;;;;;;;;;;;:23;;;:36;;:::i;:::-;13862:4;13855:11;;;;13625:252;13948:1;13890:55;13902:42;13890:11;;;:55;;:::i;:::-;:59;13886:256;;;14011:42;13983:3;;:71;;;;;;;;;;;;;;;;;;14068:38;;;;;;;;;;;;;;;;;;:23;;;:38;;:::i;:::-;14127:4;14120:11;;;;13886:256;14213:1;14155:55;14167:42;14155:11;;;:55;;:::i;:::-;:59;14151:254;;;14275:42;14247:3;;:71;;;;;;;;;;;;;;;;;;14332:37;;;;;;;;;;;;;;;;;;:23;;;:37;;:::i;:::-;14390:4;14383:11;;;;14151:254;14476:1;14418:55;14430:42;14418:11;;;:55;;:::i;:::-;:59;14414:204;;;14539:42;14511:3;;:71;;;;;;;;;;;;;;;;;;14603:4;14596:11;;;;14414:204;14689:1;14631:55;14643:42;14631:11;;;:55;;:::i;:::-;:59;14627:203;;;14751:42;14723:3;;:71;;;;;;;;;;;;;;;;;;14815:4;14808:11;;;;14627:203;14901:1;14843:55;14855:42;14843:11;;;:55;;:::i;:::-;:59;14839:205;;;14965:42;14937:3;;:71;;;;;;;;;;;;;;;;;;15029:4;15022:11;;;;14839:205;15060:5;15053:12;;13025:2047;;:::o;12757:125::-;12862:13;12838:21;:37;;;;;;;;;;;;:::i;:::-;;12757:125;:::o;82:487:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "82:487:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15310:122:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15310:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15310:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15310:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15310:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15310:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15310:122:2;;;;;;;;;;;;;;;:::i;:::-;;273:190:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;273:190:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;273:190:1;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;273:190:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;273:190:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;273:190:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;273:190:1;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;273:190:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;273:190:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;273:190:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;273:190:1;;;;;;;;;;;;;;;:::i;:::-;;129:24;;8:9:-1;5:2;;;30:1;27;20:12;5:2;129:24:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;471:95;;;:::i;:::-;;15310:122:2;15385:40;15396:5;15403:7;15422:1;15412:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15412:12:2;;;;15385:10;:40::i;:::-;15310:122;;:::o;273:190:1:-;392:20;:18;:20::i;:::-;378:34;;:10;:34;;;370:43;;;;;;439:16;448:6;439:8;:16::i;:::-;424:12;:31;;;;273:190;;;:::o;129:24::-;;;;:::o;471:95::-;523:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:35::i;:::-;;471:95::o;37170:130:2:-;37230:24;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:2;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:2;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;37273:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37273:20:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37273:20:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37273:20:2;;;;;;;;;;;;;;;;37266:27;;37170:130;:::o;42869:115::-;42928:15;42962;42971:2;42975:1;42962:8;:15::i;:::-;42955:22;;42869:115;;;:::o;15973:353::-;16074:11;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:2;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:2;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;16097:10;16110:8;;;;;;;;;;;:17;;;16128:11;16110:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16110:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16110:30:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16110:30:2;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16110:30:2;;;;;;;;;;;;;;;;16097:43;;16186:6;16172:11;:20;16162:7;:30;16154:5;:38;16150:104;;;16215:1;16208:8;;;;;;;16150:104;16270:8;;;;;;;;;;;:14;;;16291:5;16298:1;16301:11;16314:4;16270:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16270:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16270:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16270:49:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16270:49:2;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16270:49:2;;;;;;;;;;;;;;;;16263:56;;;12063:1;15973:353;;;;:::o;37306:147::-;37365:10;37431:5;37419:18;37410:27;;37396:51;;;:::o;12546:205::-;12611:16;12723:21;:19;:21::i;:::-;12716:28;;12546:205;;;:::o;42990:796::-;43058:15;43085:20;43114:2;43085:32;;43127:9;43139:1;43127:13;;43150;43166:5;43150:21;;43186:6;43195:1;43186:10;;43181:516;43202:7;:14;43198:1;:18;43181:516;;;43269:2;43253:7;43261:1;43253:10;;;;;;;;;;;;;;;;43247:17;;43242:23;;:29;;43241:66;;;;;43304:2;43288:7;43296:1;43288:10;;;;;;;;;;;;;;;;43282:17;;43277:23;;:29;;43241:66;43237:450;;;43331:8;43327:175;;;43372:1;43366:2;:7;43362:122;;;43400:5;;43362:122;43458:4;;;;;;;;43327:175;43527:2;43519:10;;;;43581:2;43566:7;43574:1;43566:10;;;;;;;;;;;;;;;;43560:17;;43555:23;;:28;43547:36;;;;43237:450;;;43635:2;43619:7;43627:1;43619:10;;;;;;;;;;;;;;;;43613:17;;43608:23;;:29;43604:83;;;43668:4;43657:15;;43604:83;43237:450;43218:3;;;;;;;43181:516;;;;43715:1;43710:2;:6;43706:53;;;43746:2;43740;:8;43732:16;;;;43706:53;43775:4;43768:11;;;;;42990:796;;;;:::o;13025:2047::-;13074:16;13164:1;13106:55;13118:42;13106:11;:55::i;:::-;:59;13102:248;;;13219:42;13191:3;;:71;;;;;;;;;;;;;;;;;;13276:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13335:4;13328:11;;;;13102:248;13421:1;13363:55;13375:42;13363:11;:55::i;:::-;:59;13359:257;;;13484:42;13456:3;;:71;;;;;;;;;;;;;;;;;;13541:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13601:4;13594:11;;;;13359:257;13687:1;13629:55;13641:42;13629:11;:55::i;:::-;:59;13625:252;;;13748:42;13720:3;;:71;;;;;;;;;;;;;;;;;;13805:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13862:4;13855:11;;;;13625:252;13948:1;13890:55;13902:42;13890:11;:55::i;:::-;:59;13886:256;;;14011:42;13983:3;;:71;;;;;;;;;;;;;;;;;;14068:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14127:4;14120:11;;;;13886:256;14213:1;14155:55;14167:42;14155:11;:55::i;:::-;:59;14151:254;;;14275:42;14247:3;;:71;;;;;;;;;;;;;;;;;;14332:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14390:4;14383:11;;;;14151:254;14476:1;14418:55;14430:42;14418:11;:55::i;:::-;:59;14414:204;;;14539:42;14511:3;;:71;;;;;;;;;;;;;;;;;;14603:4;14596:11;;;;14414:204;14689:1;14631:55;14643:42;14631:11;:55::i;:::-;:59;14627:203;;;14751:42;14723:3;;:71;;;;;;;;;;;;;;;;;;14815:4;14808:11;;;;14627:203;14901:1;14843:55;14855:42;14843:11;:55::i;:::-;:59;14839:205;;;14965:42;14937:3;;:71;;;;;;;;;;;;;;;;;;15029:4;15022:11;;;;14839:205;15060:5;15053:12;;13025:2047;;:::o;12757:125::-;12862:13;12838:21;:37;;;;;;;;;;;;:::i;:::-;;12757:125;:::o;82:487:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.4.22 <0.9.0;\r\n\r\nimport \"ethereum-api/oraclizeAPI_0.5.sol\";\r\n\r\ncontract generateNumber is usingOraclize{\r\n    uint public randomNumber;\r\n\r\n    constructor() payable public{\r\n        oraclize_setProof(proofType_Android | proofStorage_IPFS);\r\n    }\r\n\r\n    function __callback(bytes32 queryId, string memory result, bytes memory proof) public {\r\n        require(msg.sender == oraclize_cbAddress());\r\n        randomNumber = parseInt(result);\r\n    }\r\n\r\n    function getRandomNumber() public payable{\r\n        oraclize_query(\"Comp\", \"IPFS Hash\");\r\n    }\r\n}",
  "sourcePath": "C:/Users/Lenovo/projects/oraclize/randomness/contracts/generateRandomNumber.sol",
  "ast": {
    "absolutePath": "/C/Users/Lenovo/projects/oraclize/randomness/contracts/generateRandomNumber.sol",
    "exportedSymbols": {
      "generateNumber": [
        83
      ]
    },
    "id": 84,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 34,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "absolutePath": "ethereum-api/oraclizeAPI_0.5.sol",
        "file": "ethereum-api/oraclizeAPI_0.5.sol",
        "id": 35,
        "nodeType": "ImportDirective",
        "scope": 84,
        "sourceUnit": 6380,
        "src": "36:42:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 36,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6379,
              "src": "109:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6379",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 37,
            "nodeType": "InheritanceSpecifier",
            "src": "109:13:1"
          }
        ],
        "contractDependencies": [
          6379
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 83,
        "linearizedBaseContracts": [
          83,
          6379
        ],
        "name": "generateNumber",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 39,
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "scope": 83,
            "src": "129:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 38,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "129:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 48,
              "nodeType": "Block",
              "src": "190:75:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        },
                        "id": 45,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 43,
                          "name": "proofType_Android",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 785,
                          "src": "219:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "|",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 44,
                          "name": "proofStorage_IPFS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 782,
                          "src": "239:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "src": "219:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes1",
                          "typeString": "bytes1"
                        }
                      ],
                      "id": 42,
                      "name": "oraclize_setProof",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4190,
                      "src": "201:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes1_$returns$__$",
                        "typeString": "function (bytes1)"
                      }
                    },
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "201:56:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "201:56:1"
                }
              ]
            },
            "documentation": null,
            "id": 49,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 40,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "173:2:1"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "190:0:1"
            },
            "scope": 83,
            "src": "162:103:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 72,
              "nodeType": "Block",
              "src": "359:104:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 59,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6394,
                            "src": "378:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 60,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "378:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 61,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4202,
                            "src": "392:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "392:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "378:34:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 58,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6397,
                        6398
                      ],
                      "referencedDeclaration": 6397,
                      "src": "370:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "370:43:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "370:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 66,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39,
                      "src": "424:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 68,
                          "name": "result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "448:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 67,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5035,
                          5152
                        ],
                        "referencedDeclaration": 5035,
                        "src": "439:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) pure returns (uint256)"
                        }
                      },
                      "id": 69,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "439:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "424:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 71,
                  "nodeType": "ExpressionStatement",
                  "src": "424:31:1"
                }
              ]
            },
            "documentation": null,
            "id": 73,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51,
                  "name": "queryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "293:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "293:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "310:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 55,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 73,
                  "src": "332:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "332:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "292:59:1"
            },
            "returnParameters": {
              "id": 57,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "359:0:1"
            },
            "scope": 83,
            "src": "273:190:1",
            "stateMutability": "nonpayable",
            "superFunction": 1132,
            "visibility": "public"
          },
          {
            "body": {
              "id": 81,
              "nodeType": "Block",
              "src": "512:54:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6d70",
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "538:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_18be425a6f619241c7fe03e971a02a0b14d7f6a09a2eee74480672e022ee09d6",
                          "typeString": "literal_string \"Comp\""
                        },
                        "value": "Comp"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "495046532048617368",
                        "id": 78,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "546:11:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e589ada703620e3cc502e745ffc80ff1b994da524412b706f3d78f8c14242cc8",
                          "typeString": "literal_string \"IPFS Hash\""
                        },
                        "value": "IPFS Hash"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_18be425a6f619241c7fe03e971a02a0b14d7f6a09a2eee74480672e022ee09d6",
                          "typeString": "literal_string \"Comp\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e589ada703620e3cc502e745ffc80ff1b994da524412b706f3d78f8c14242cc8",
                          "typeString": "literal_string \"IPFS Hash\""
                        }
                      ],
                      "id": 76,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1206,
                        1249,
                        1296,
                        1341,
                        1385,
                        1431,
                        1481,
                        1529,
                        1577,
                        1627,
                        1681,
                        1733,
                        1770,
                        1810,
                        1853,
                        1893,
                        1938,
                        1986,
                        2037,
                        2085,
                        2138,
                        2194,
                        2253,
                        2309,
                        2370,
                        2434,
                        2501,
                        2565,
                        2634,
                        2706,
                        2781,
                        2853,
                        2901,
                        2951,
                        3005,
                        3057,
                        3094,
                        3134,
                        3177,
                        3217,
                        3262,
                        3310,
                        3361,
                        3409,
                        3462,
                        3518,
                        3577,
                        3633,
                        3694,
                        3758,
                        3825,
                        3889,
                        3958,
                        4030,
                        4105,
                        4177
                      ],
                      "referencedDeclaration": 1206,
                      "src": "523:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "523:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "523:35:1"
                }
              ]
            },
            "documentation": null,
            "id": 82,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRandomNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "495:2:1"
            },
            "returnParameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:0:1"
            },
            "scope": 83,
            "src": "471:95:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 84,
        "src": "82:487:1"
      }
    ],
    "src": "0:569:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/Lenovo/projects/oraclize/randomness/contracts/generateRandomNumber.sol",
      "exportedSymbols": {
        "generateNumber": [
          83
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".22",
            "<",
            "0.9",
            ".0"
          ]
        },
        "id": 34,
        "name": "PragmaDirective",
        "src": "0:32:1"
      },
      {
        "attributes": {
          "SourceUnit": 6380,
          "absolutePath": "ethereum-api/oraclizeAPI_0.5.sol",
          "file": "ethereum-api/oraclizeAPI_0.5.sol",
          "scope": 84,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 35,
        "name": "ImportDirective",
        "src": "36:42:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            6379
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            83,
            6379
          ],
          "name": "generateNumber",
          "scope": 84
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "usingOraclize",
                  "referencedDeclaration": 6379,
                  "type": "contract usingOraclize"
                },
                "id": 36,
                "name": "UserDefinedTypeName",
                "src": "109:13:1"
              }
            ],
            "id": 37,
            "name": "InheritanceSpecifier",
            "src": "109:13:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randomNumber",
              "scope": 83,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 38,
                "name": "ElementaryTypeName",
                "src": "129:4:1"
              }
            ],
            "id": 39,
            "name": "VariableDeclaration",
            "src": "129:24:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 83,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 40,
                "name": "ParameterList",
                "src": "173:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 41,
                "name": "ParameterList",
                "src": "190:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes1",
                                  "typeString": "bytes1"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 4190,
                              "type": "function (bytes1)",
                              "value": "oraclize_setProof"
                            },
                            "id": 42,
                            "name": "Identifier",
                            "src": "201:17:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes1",
                                "typeString": "bytes1"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "operator": "|",
                              "type": "bytes1"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 785,
                                  "type": "bytes1",
                                  "value": "proofType_Android"
                                },
                                "id": 43,
                                "name": "Identifier",
                                "src": "219:17:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 782,
                                  "type": "bytes1",
                                  "value": "proofStorage_IPFS"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "239:17:1"
                              }
                            ],
                            "id": 45,
                            "name": "BinaryOperation",
                            "src": "219:37:1"
                          }
                        ],
                        "id": 46,
                        "name": "FunctionCall",
                        "src": "201:56:1"
                      }
                    ],
                    "id": 47,
                    "name": "ExpressionStatement",
                    "src": "201:56:1"
                  }
                ],
                "id": 48,
                "name": "Block",
                "src": "190:75:1"
              }
            ],
            "id": 49,
            "name": "FunctionDefinition",
            "src": "162:103:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "__callback",
              "scope": 83,
              "stateMutability": "nonpayable",
              "superFunction": 1132,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "queryId",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 50,
                        "name": "ElementaryTypeName",
                        "src": "293:7:1"
                      }
                    ],
                    "id": 51,
                    "name": "VariableDeclaration",
                    "src": "293:15:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "result",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 52,
                        "name": "ElementaryTypeName",
                        "src": "310:6:1"
                      }
                    ],
                    "id": 53,
                    "name": "VariableDeclaration",
                    "src": "310:20:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "proof",
                      "scope": 73,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "bytes",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes",
                          "type": "bytes"
                        },
                        "id": 54,
                        "name": "ElementaryTypeName",
                        "src": "332:5:1"
                      }
                    ],
                    "id": 55,
                    "name": "VariableDeclaration",
                    "src": "332:18:1"
                  }
                ],
                "id": 56,
                "name": "ParameterList",
                "src": "292:59:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 57,
                "name": "ParameterList",
                "src": "359:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                6397,
                                6398
                              ],
                              "referencedDeclaration": 6397,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 58,
                            "name": "Identifier",
                            "src": "370:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 6394,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 59,
                                    "name": "Identifier",
                                    "src": "378:3:1"
                                  }
                                ],
                                "id": 60,
                                "name": "MemberAccess",
                                "src": "378:10:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 4202,
                                      "type": "function () returns (address)",
                                      "value": "oraclize_cbAddress"
                                    },
                                    "id": 61,
                                    "name": "Identifier",
                                    "src": "392:18:1"
                                  }
                                ],
                                "id": 62,
                                "name": "FunctionCall",
                                "src": "392:20:1"
                              }
                            ],
                            "id": 63,
                            "name": "BinaryOperation",
                            "src": "378:34:1"
                          }
                        ],
                        "id": 64,
                        "name": "FunctionCall",
                        "src": "370:43:1"
                      }
                    ],
                    "id": 65,
                    "name": "ExpressionStatement",
                    "src": "370:43:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 39,
                              "type": "uint256",
                              "value": "randomNumber"
                            },
                            "id": 66,
                            "name": "Identifier",
                            "src": "424:12:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    5035,
                                    5152
                                  ],
                                  "referencedDeclaration": 5035,
                                  "type": "function (string memory) pure returns (uint256)",
                                  "value": "parseInt"
                                },
                                "id": 67,
                                "name": "Identifier",
                                "src": "439:8:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 53,
                                  "type": "string memory",
                                  "value": "result"
                                },
                                "id": 68,
                                "name": "Identifier",
                                "src": "448:6:1"
                              }
                            ],
                            "id": 69,
                            "name": "FunctionCall",
                            "src": "439:16:1"
                          }
                        ],
                        "id": 70,
                        "name": "Assignment",
                        "src": "424:31:1"
                      }
                    ],
                    "id": 71,
                    "name": "ExpressionStatement",
                    "src": "424:31:1"
                  }
                ],
                "id": 72,
                "name": "Block",
                "src": "359:104:1"
              }
            ],
            "id": 73,
            "name": "FunctionDefinition",
            "src": "273:190:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getRandomNumber",
              "scope": 83,
              "stateMutability": "payable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 74,
                "name": "ParameterList",
                "src": "495:2:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 75,
                "name": "ParameterList",
                "src": "512:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_18be425a6f619241c7fe03e971a02a0b14d7f6a09a2eee74480672e022ee09d6",
                                  "typeString": "literal_string \"Comp\""
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e589ada703620e3cc502e745ffc80ff1b994da524412b706f3d78f8c14242cc8",
                                  "typeString": "literal_string \"IPFS Hash\""
                                }
                              ],
                              "overloadedDeclarations": [
                                1206,
                                1249,
                                1296,
                                1341,
                                1385,
                                1431,
                                1481,
                                1529,
                                1577,
                                1627,
                                1681,
                                1733,
                                1770,
                                1810,
                                1853,
                                1893,
                                1938,
                                1986,
                                2037,
                                2085,
                                2138,
                                2194,
                                2253,
                                2309,
                                2370,
                                2434,
                                2501,
                                2565,
                                2634,
                                2706,
                                2781,
                                2853,
                                2901,
                                2951,
                                3005,
                                3057,
                                3094,
                                3134,
                                3177,
                                3217,
                                3262,
                                3310,
                                3361,
                                3409,
                                3462,
                                3518,
                                3577,
                                3633,
                                3694,
                                3758,
                                3825,
                                3889,
                                3958,
                                4030,
                                4105,
                                4177
                              ],
                              "referencedDeclaration": 1206,
                              "type": "function (string memory,string memory) returns (bytes32)",
                              "value": "oraclize_query"
                            },
                            "id": 76,
                            "name": "Identifier",
                            "src": "523:14:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "436f6d70",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Comp\"",
                              "value": "Comp"
                            },
                            "id": 77,
                            "name": "Literal",
                            "src": "538:6:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "495046532048617368",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"IPFS Hash\"",
                              "value": "IPFS Hash"
                            },
                            "id": 78,
                            "name": "Literal",
                            "src": "546:11:1"
                          }
                        ],
                        "id": 79,
                        "name": "FunctionCall",
                        "src": "523:35:1"
                      }
                    ],
                    "id": 80,
                    "name": "ExpressionStatement",
                    "src": "523:35:1"
                  }
                ],
                "id": 81,
                "name": "Block",
                "src": "512:54:1"
              }
            ],
            "id": 82,
            "name": "FunctionDefinition",
            "src": "471:95:1"
          }
        ],
        "id": 83,
        "name": "ContractDefinition",
        "src": "82:487:1"
      }
    ],
    "id": 84,
    "name": "SourceUnit",
    "src": "0:569:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.1",
  "updatedAt": "2021-07-24T16:42:01.019Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}